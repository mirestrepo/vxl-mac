head	1.2;
access;
symbols
	locate_and_track:1.2
	rigid_optimised:1.1
	no_structure_preservation:1.1
	somewhat_optimised:1.1
	partially_optimised:1.1
	limited_endsegment_rotation2:1.1
	limited_endsegment_rotation:1.1
	slow_segment:1.1;
locks
	mccane:1.2; strict;
comment	@# @;


1.2
date	2000.12.13.20.00.38;	author mccane;	state Exp;
branches;
next	1.1;

1.1
date	2000.11.29.21.19.59;	author mccane;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Modified to work with colour images. Seems to work OK, but it's hard to
tell if it's any better than with just greyscale. Also goes a bit slower -
about 19ms/frame compared to 13ms/frame for greyscale.
@
text
@
#include "image_convert.h"

//----------------------------------------------------------------------
//: convert image
//
// Converts from one type of memory image to another
//
// .param const vil_memory_image_of<T1> &from: the image converted from
// .param T2 &var: a dummy variable used so the right function is called.
//
// .ret vil_memory_image_of<T2> *: the resultant image - a new one
//
//.author Brendan McCane
//----------------------------------------------------------------------

template <class T1, class T2>
vil_memory_image_of<T2> *convert_image
(
	const vil_memory_image_of<T1> &from,
	T2 &var
)
{
	vil_memory_image_of<T2> *to;
	to = new vil_memory_image_of<T2>(from.width(), from.height());

	for (int x=0; x<from.width(); x++)
		for (int y=0; y<from.height(); y++)
		{
			(*to)(x,y) = (T2)from(x,y);
		}

	return(to);
}


//----------------------------------------------------------------------
//: convert image
//
// Specialization for converting from rgb to greyscale
//
// .param const vil_memory_image_of<T1> &from: the image converted from
// .param T2 &var: a dummy variable used so the right function is called.
//
// .ret vil_memory_image_of<T2> *: the resultant image - a new one
//
//.author Brendan McCane
//----------------------------------------------------------------------

template <> vil_memory_image_of<unsigned char> *
convert_image<vil_rgb<unsigned char>, unsigned char>
( 
	const vil_memory_image_of<vil_rgb<unsigned char> > &from,
	unsigned char &var
)
{
	vil_memory_image_of<unsigned char> *to;
	to = new vil_memory_image_of<unsigned char>(from.width(), from.height());

	for (int x=0; x<from.width(); x++)
		for (int y=0; y<from.height(); y++)
		{
			(*to)(x,y) = from(x,y).grey();
		}

	return(to);
}
@


1.1
log
@Initial revision
@
text
@d35 33
@
