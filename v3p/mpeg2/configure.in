dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.52)
AC_INIT
dnl AC_CONFIG_SRCDIR([src/mpeg2dec.c]) dnl this file not in vxl/v3p
AC_CONFIG_SRCDIR([libmpeg2/mpeg2_internal.h]) dnl new magic file in vxl/v3p
dnl AC_CONFIG_AUX_DIR(autotools) dnl not needed for VXL
dnl for VXL, this configure script will not make makefiles, just config.h
dnl AC_CONFIG_FILES([Makefile autotools/Makefile include/Makefile test/Makefile
dnl     doc/Makefile src/Makefile libmpeg2/Makefile libvo/Makefile vc++/Makefile])
AM_INIT_AUTOMAKE([mpeg2dec],[0.2.1])
AM_CONFIG_HEADER(include/config.h)
AM_MAINTAINER_MODE
dnl AC_CANONICAL_HOST dnl not needed for VXL
if test x"$host_alias" = x""; then host_alias="$host"; fi

dnl Checks for compiler
AC_PROG_CC
AC_PROG_GCC_TRADITIONAL

dnl CC-specific flags
if test x"$CC" = x"checkergcc"; then
    enable_sdl=no
elif test x"$GCC" = x"yes"; then

    dnl GCC-specific flags
    dnl -Wall -Werror moved to the end to not disturb the configure script

    dnl -O3
    changequote(<<,>>)
    OPT_CFLAGS=`echo "$CFLAGS"|sed "s/-O[0-9]*//g;"`
    changequote([,])
    OPT_CFLAGS="$OPT_CFLAGS -O3"
    AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])

    dnl -fomit-frame-pointer
    OPT_CFLAGS="$CFLAGS -fomit-frame-pointer"
    AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])

    dnl arch-specific flags
    case "$host_alias" in
    i?86-* | k?-*)
	AC_DEFINE([ARCH_X86],,[x86 architecture])
	case "$host_alias" in
	i386-*) OPT_CFLAGS="$CFLAGS -mcpu=i386";;
	i486-*) OPT_CFLAGS="$CFLAGS -mcpu=i486";;
	i586-*) OPT_CFLAGS="$CFLAGS -mcpu=pentium";;
	i686-*) OPT_CFLAGS="$CFLAGS -mcpu=pentiumpro";;
	k6-*)   OPT_CFLAGS="$CFLAGS -mcpu=k6";;
	esac
	AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
    ppc-* | powerpc-*)
	OPT_CFLAGS="$CFLAGS -Wa,-m7400"
	AC_TRY_CFLAGS([$OPT_CFLAGS],
	    [CFLAGS=$OPT_CFLAGS; AC_DEFINE([ARCH_PPC],,[ppc architecture])]);;
    sparc-* | sparc64-*)
	OPT_CFLAGS="$CFLAGS -mcpu=ultrasparc -mvis -Wa,-Av9"
	AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
    mips-sgi-irix6.*)	dnl do we need to be that specific ?
	OPT_CFLAGS="$CFLAGS -mabi=64"
	AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
    esac
elif test x"$CC" = x"tcc" -a x"`$CC -version 2>&1 | grep TenDRA`" != x""; then
    dnl TenDRA portability checking compiler
    TENDRA=yes
    dnl tendra.h moved to mpeg2dec in VXL
    CFLAGS="-Xp -Yansi -f`pwd`/include/mpeg2dec/tendra.h -DELIDE_CODE"
    enable_mlib=no
    no_x=yes
    enable_sdl=no
elif test x"$CC" = x"icc" -a x"`$CC -V 2>&1 | grep Intel`" != x""; then
    dnl Intel C++ compiler
    CFLAGS="-g -O3 -unroll -ip"
else
    dnl non-gcc flags - we probably need exact configuration triplets here.
    case "$host_alias" in
    mips-sgi-irix6.*)
	OPT_CFLAGS="$CFLAGS -64"
	AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
    sparc-sun-solaris*)
	OPT_CFLAGS="$CFLAGS -xCC -fast -xO5"
	AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS]);;
    esac
fi

dnl Checks for libtool - this must be done after we set cflags
dnl AC_DISABLE_SHARED dnl not needed in VXL
dnl AC_LIBTOOL_WIN32_DLL dnl not needed in VXL
dnl AC_PROG_LIBTOOL dnl not needed in VXL

dnl Checks for libraries.

dnl Checks for header files.
dnl includes that are not generated are moved to mpeg2dec in VXL
INCLUDES='-I$(top_srcdir)/include/mpeg2dec -I$(top_builddir)/include'
AC_SUBST([INCLUDES])
AC_CHECK_HEADERS([sys/time.h])
dnl inttypes.h moved to mpeg2dec in VXL
AC_CHECK_GENERATE_INTTYPES([include])

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_C_RESTRICT
AC_TYPE_SIZE_T
AC_C_BIGENDIAN

dnl Checks for library functions.
AC_CHECK_FUNCS([memalign])
AC_TYPE_SIGNAL

builtin([include],[libmpeg2/configure.incl])
builtin([include],[libvo/configure.incl])
dnl builtin([include],[src/configure.incl]) dnl VXL does not use the src dir

AC_ARG_ENABLE([warnings],
    [  --disable-warnings      do not treat warnings as errors])
if test x"$enable_warnings" != x"no" -a x"$GCC" = x"yes"; then
    dnl compiler warnings
    OPT_CFLAGS="$CFLAGS -Wall -Werror"
    AC_TRY_CFLAGS([$OPT_CFLAGS],[CFLAGS=$OPT_CFLAGS])
elif test x"$TENDRA" = x"yes"; then
    dnl TenDRA portability checking compiler
    CFLAGS="$CFLAGS -DTenDRA_check"
fi

AC_C_ATTRIBUTE_ALIGNED

AC_OUTPUT
