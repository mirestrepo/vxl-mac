# Process this file with autoconf to produce a configure script.
AC_INIT(CMakeLists.txt)

CMAKE_CONFIG_DIR=`pwd`
AC_SUBST(CMAKE_CONFIG_DIR)

#
# check for some programs we use
#

# C compiler
AC_PROG_CC

# C++ compiler
AC_PROG_CXX

# C++ preprocessor
AC_PROG_CXXCPP

# Ranlib
AC_PROG_RANLIB

# X includes and libraries
AC_PATH_XTRA


# Step 1: set the variable "system" to hold the name and version number
# for the system.  This can usually be done via the "uname" command, but
# there are a few systems, like Next, where this doesn't work.

AC_MSG_CHECKING([system version (for dynamic loading)])
if test -f /usr/lib/NextStep/software_version; then
  system=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`
else
    system=`uname -s`-`uname -r`
    if test "$?" -ne 0 ; then
	AC_MSG_RESULT([unknown (can't find uname command)])
	system=unknown
    else
	# Special check for weird MP-RAS system (uname returns weird
	# results, and the version is kept in special file).
    
	if test -r /etc/.relid -a "X`uname -n`" = "X`uname -s`" ; then
	    system=MP-RAS-`awk '{print $3}' /etc/.relid'`
	fi
	AC_MSG_RESULT($system)
    fi
fi


#
# Basic library generation choices
#
AC_ARG_ENABLE(shared,
         [  --enable-shared          create shared libraries],
         [CMAKE_shared_ok=$enableval], [CMAKE_shared_ok=no])


AC_SUBST(INSTALL_TARGET)

# option for handling BSD style makefile includes
#
AC_ARG_WITH(bsdmake,
         [  --enable-bsdmake        uses bsd style makefile includes],
	 if test "$withval" = yes; then
         MAKEINCLUDE=".include"
         MAKEQUOTE='"'
         fi,
         MAKEINCLUDE="include"
         MAKEQUOTE='')
AC_SUBST(MAKEINCLUDE)
AC_SUBST(MAKEQUOTE)



# the following is an excerpt from the tcl7.5b2 configure.in
#--------------------------------------------------------------------
#	The statements below define a collection of symbols related to
#	dynamic loading and shared libraries:
#
#	SHLIB_CFLAGS -	Flags to pass to cc when compiling the components
#			of a shared library (may request position-independent
#			code, among other things).
#	SHLIB_LD_LIBS -	Dependent libraries for the linker to scan when
#			creating shared libraries.  This symbol typically
#			goes at the end of the "ld" commands that build
#			shared libraries. The value of the symbol if
#			"${LIBS}" if all of the dependent libraries should
#			be specified when creating a shared library.  If
#			dependent libraries should not be specified (as on
#			SunOS 4.x, where they cause the link to fail, or in
#			general if Tcl and Tk aren't themselves shared
#			libraries), then this symbol has an empty string
#			as its value.
#	SHLIB_SUFFIX -	Suffix to use for the name of the shared library.  An
#			empty string means we don't know how to use shared
#			libraries on this platform.
#	CMAKE_SHLIB_BUILD_FLAGS -
#                       Flags to use when building a shared library.	
#	CMAKE_SHLIB_LINK_FLAGS -	
#                       Flags to pass to the compiler when linking object
#			files into an executable application binary such
#			as tclsh.
#--------------------------------------------------------------------


# Step 2: check for existence of -ldl library.  This is needed because
# Linux can use either -ldl or -ldld for dynamic loading.

AC_CHECK_LIB(dl, dlopen, have_dl=yes, have_dl=no)

# Step 4: set configuration options based on system name and version.

fullSrcDir=`cd $srcdir; pwd`
AC_SUBST(fullSrcDir)
case $system in
    AIX-*)
	# AIX: can't link shared library extensions unless Tcl and Tk are
	# also shared libraries.
	SHLIB_CFLAGS=""
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX="..o"
	DL_LIBS=""
        AC_CHECK_LIB(ld,printf, DL_LIBS="-lld")
	CMAKE_SHLIB_LINK_FLAGS=""
	;;
    HP-UX-*.08.*|HP-UX-*.09.*|HP-UX-*.10.*)
	SHLIB_CFLAGS="+z"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".sl"
	DL_LIBS="-ldld"
	CMAKE_SHLIB_BUILD_FLAGS='+Z -Wl,-E -Wl,-b'
	CMAKE_SHLIB_LINK_FLAGS='-Wl,+s -Wl,+b,${LIB_RUNTIME_DIR}'
        if test "$CC" = "gcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
  	  CMAKE_SHLIB_BUILD_FLAGS='-shared -Wl,-E -Wl,-b'
	  CMAKE_SHLIB_LINK_FLAGS='-Wl,+s -Wl,+b,${LIB_RUNTIME_DIR}'
        fi
	;;
    IRIX-5.*)
	SHLIB_CFLAGS=""
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	CMAKE_SHLIB_BUILD_FLAGS="-shared -rdata_shared"
	;;
    IRIX-6* | IRIX64-6* | IRIX-64-6*)
	SHLIB_CFLAGS=""
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	CMAKE_SHLIB_BUILD_FLAGS="-shared -rdata_shared"
	;;
    Linux*)
	SHLIB_CFLAGS="-fPIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	CMAKE_SHLIB_BUILD_FLAGS="-shared"
	if test "$have_dl" = yes; then
	    DL_LIBS="-ldl"
	    CMAKE_SHLIB_LINK_FLAGS="-rdynamic"
	else
	    AC_CHECK_HEADER(dld.h, [
		DL_LIBS="-ldld"
		CMAKE_SHLIB_LINK_FLAGS=""])
	fi
	;;
    CYGWIN_NT*)
        SHLIB_CFLAGS=""
        DL_LIBS="-lgdi32" 
        SHLIB_SUFFIX=".dll"
        CMAKE_SHLIB_LINK_FLAGS="-shared"
        ;;
    MP-RAS-02*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	CMAKE_SHLIB_LINK_FLAGS=""
	;;
    MP-RAS-*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	CMAKE_SHLIB_LINK_FLAGS="-Wl,-Bexport"
	;;
    NetBSD-*|FreeBSD-*)
	# Not available on all versions:  check for include file.
	if test -f /usr/include/dlfcn.h; then
	    SHLIB_CFLAGS="-fpic"
	    SHLIB_LD_LIBS=""
	    SHLIB_SUFFIX=".so"
	    DL_LIBS=""
	    CMAKE_SHLIB_BUILD_FLAGS="-shared"
	else
	    SHLIB_CFLAGS=""
	    SHLIB_LD_LIBS=""
	    SHLIB_SUFFIX="..o"
	    DL_LIBS=""
	    CMAKE_SHLIB_LINK_FLAGS=""
	fi
	;;
    NEXTSTEP-*)
	SHLIB_CFLAGS=""
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	CMAKE_SHLIB_LINK_FLAGS=""
	;;
    OSF1-1.[012])
	# OSF/1 1.[012] from OSF, and derivatives, including Paragon OSF/1
	SHLIB_CFLAGS=""
	# Hack: make package name same as library name
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	CMAKE_SHLIB_LINK_FLAGS=""
	;;
    OSF1-1.*)
	# OSF/1 1.3 from OSF using ELF, and derivatives, including AD2
	SHLIB_CFLAGS="-fpic"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	CMAKE_SHLIB_LINK_FLAGS=""
	;;
    OSF1-V*)
        # Digital OSF/1
	SHLIB_CFLAGS=""
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	CMAKE_SHLIB_BUILD_FLAGS='-shared -Wl,-expect_unresolved,"*"'
	CMAKE_SHLIB_LINK_FLAGS='-Wl,-rpath,${LIB_RUNTIME_DIR}'
	;;
    RISCos-*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX="..o"
	DL_LIBS=""
	CMAKE_SHLIB_LINK_FLAGS="-Wl,-D,08000000"
	;;
    SCO_SV-3.2*)
        # Note, dlopen is available only on SCO 3.2.5 and greater.  However,
        # this test works, since "uname -s" was non-standard in 3.2.4 and
        # below.
	SHLIB_CFLAGS="-Kpic -belf"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS=""
	CMAKE_SHLIB_LINK_FLAGS="-belf -Wl,-Bexport"
	;;
     SINIX*5.4*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	CMAKE_SHLIB_LINK_FLAGS=""
	;;
    SunOS-4*)
	SHLIB_CFLAGS="-PIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	CMAKE_SHLIB_BUILD_FLAGS='-shared -Wl,-r -nostdlib'
	CMAKE_SHLIB_LINK_FLAGS='-Wl,-L${LIB_RUNTIME_DIR}'
	;;
    SunOS-5*)
	SHLIB_CFLAGS="-KPIC"
	SHLIB_LD_LIBS='${LIBS}'
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	CMAKE_SHLIB_BUILD_FLAGS='-G'
	CMAKE_SHLIB_LINK_FLAGS='-R ${LIB_RUNTIME_DIR}'
        if test "$CC" = "gcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
	  CMAKE_SHLIB_BUILD_FLAGS='-Wl,-G'
	  CMAKE_SHLIB_LINK_FLAGS='-Wl,-R,${LIB_RUNTIME_DIR}'
        fi
	;;
    ULTRIX-4.*)
	SHLIB_CFLAGS="-G 0"
	SHLIB_SUFFIX="..o"
	SHLIB_LD_LIBS=""
	DL_LIBS=""
	CMAKE_SHLIB_LINK_FLAGS="-Wl,-D,08000000"
	;;
    UNIX_SV*)
	SHLIB_CFLAGS="-K PIC"
	SHLIB_LD_LIBS=""
	SHLIB_SUFFIX=".so"
	DL_LIBS="-ldl"
	CMAKE_SHLIB_LINK_FLAGS="-Wl,-Bexport"
	;;
esac
export SHLIB_SUFFIX

# If we're running gcc, then change the C flags for compiling shared
# libraries to the right flags for gcc, instead of those for the
# standard manufacturer compiler.
if test "$CC" = "gcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
  SHLIB_CFLAGS="-fPIC"
fi
# if running on cygwin remove -fPIC flag
case $system in 
  CYGWIN_NT*)
    SHLIB_CFLAGS=""
    ;;
esac

if test "$CMAKE_shared_ok" = "yes"; then
    CMAKE_SHLIB_CFLAGS="${SHLIB_CFLAGS}"
    CMAKE_LD_SEARCH_FLAGS="${LD_SEARCH_FLAGS}"
    RANLIB=":"
    CMAKE_LIB_EXT="${SHLIB_SUFFIX}"
else
    CMAKE_LIB_EXT=".a"
    SHLIB_LD_LIBS=""
    CMAKE_SHLIB_CFLAGS=""
    CMAKE_LD_SEARCH_FLAGS=""
fi
export CMAKE_LIB_EXT



AC_SUBST(CMAKE_SHLIB_LINK_FLAGS)
AC_SUBST(CMAKE_SHLIB_BUILD_FLAGS)

AC_SUBST(CMAKE_SHLIB_CFLAGS)
AC_SUBST(CMAKE_LIB_EXT)
AC_SUBST(DL_LIBS)
AC_SUBST(SHLIB_LD_LIBS)
AC_SUBST(SHLIB_SUFFIX)


#--------------------------------------------------------------------
#	Include sys/select.h if it exists and if it supplies things
#	that appear to be useful and aren't already in sys/types.h.
#	This appears to be true only on the RS/6000 under AIX.  Some
#	systems like OSF/1 have a sys/select.h that's of no use, and
#	other systems like SCO UNIX have a sys/select.h that's
#	pernicious.  If "fd_set" isn't defined anywhere then set a
#	special flag.
#--------------------------------------------------------------------

AC_MSG_CHECKING([fd_set and sys/select])
AC_TRY_COMPILE([#include <sys/types.h>],
	[fd_set readMask, writeMask;], tk_ok=yes, tk_ok=no)
if test $tk_ok = no; then
    AC_HEADER_EGREP(fd_mask, sys/select.h, tk_ok=yes)
    if test $tk_ok = yes; then
	AC_DEFINE(HAVE_SYS_SELECT_H)
    fi
fi
AC_MSG_RESULT($tk_ok)
if test $tk_ok = no; then
    AC_DEFINE(NO_FD_SET)
fi

# on hp use -Aa for ansi
if test $ac_cv_prog_gxx = no; then
case $system in
    HP-UX-*.08.*|HP-UX-*.09.*|HP-UX-*.10.*)
        echo $ac_n "checking whether ${CC} accepts -Aa""... $ac_c" 1>&6
        echo 'void f(){}' > conftest.c
        if test -z "`${CC} -Aa -c conftest.c 2>&1`"; then
          echo "$ac_t""yes" 1>&6
          ANSI_CFLAGS="-Aa"
        else
          echo "$ac_t""no" 1>&6
        fi
        rm -f conftest*
	;;
esac
fi
AC_SUBST(ANSI_CFLAGS)

if test "$CC" = "gcc" -o `$CC -v 2>&1 | grep -c gcc` != "0" ; then
  SHLIB_CFLAGS="-fPIC"
fi



#===========================================================================
# from vcl/configure.in


#--------------------------------------------------------------------------------
# MANUAL OPTIONS

# use native STL? default is yes.
AC_ARG_ENABLE(emulation-stl,
[  --enable-emulation-stl  use the STL that comes with vcl],
[VCL_USE_NATIVE_STL=0],
[VCL_USE_NATIVE_STL=1])

# use native complex<>? default is yes.
AC_ARG_ENABLE(emulation-complex,
[  --enable-emulation-complex  use the complex<> that comes with vcl],
[VCL_USE_NATIVE_COMPLEX=0],
[VCL_USE_NATIVE_COMPLEX=1])

# use implicit template instantiation?
AC_ARG_ENABLE(implicit-templates,[
  --enable-implicit-templates        enable implicit template instantiation (default)
  --disable-implicit-templates       disable implicit template instantiation
],[
if test "$enable_implicit_templates" = yes; then
  VCL_USE_IMPLICIT_TEMPLATES=1
else
  VCL_USE_IMPLICIT_TEMPLATES=0
fi
export VCL_USE_IMPLICIT_TEMPLATES
],[
VCL_USE_IMPLICIT_TEMPLATES=1
export VCL_USE_IMPLICIT_TEMPLATES
])

#--------------------------------------------------------------------------------
# COMPILER CHARACTERISTICS

# Try to figure out the type of compiler
#
AC_MSG_CHECKING("the C++ compiler type")

if   ( $CXX -v < /dev/null 2>&1 | grep "gcc version" > /dev/null 2>&1); then
  compiler=gcc
  version=`$CXX -v < /dev/null 2>&1 | awk '{if(/gcc version/){print $3}}'`
elif ( $CXX -V < /dev/null 2>&1 | grep "WorkShop" > /dev/null ); then
  compiler=workshop
  version=`$CXX -V < /dev/null 2>&1 | awk '{if(/WorkShop/){print $4}}'`
elif ( $CXX -version < /dev/null 2>&1 | grep "MIPSpro" > /dev/null ); then
  compiler=mipspro
  version=`$CXX -version < /dev/null 2>&1 | awk '{if(/MIPSpro/){print $4}}'`
else
  compiler=unknown
  version=unknown
fi

AC_MSG_RESULT( $compiler version $version )

## syntax
AC_CXX_HAS_BOOL

AC_CXX_HAS_TYPENAME

AC_CXX_HAS_EXPORT

AC_CXX_HAS_MUTABLE

AC_CXX_HAS_EXPLICIT

AC_CXX_HAS_DYNAMIC_CAST

AC_CXX_CHECK_FOR_SCOPE

AC_CXX_DEFAULT_VALUE

AC_CXX_HAS_MEMBER_TEMPLATES

AC_CXX_CAN_DO_PARTIAL_SPECIALIZATION

AC_CXX_DEFINE_SPECIALIZATION

AC_CXX_ALLOWS_INLINE_INSTANTIATION

if test "$VCL_ALLOWS_INLINE_INSTANTIATION" = "1"; then
AC_CXX_NEEDS_INLINE_INSTANTIATION
else
VCL_NEEDS_INLINE_INSTANTIATION="0";
export VCL_NEEDS_INLINE_INSTANTIATION;
fi

#AC_SUBST(VCL_DO_NOT_INSTANTIATE)

#AC_SUBST(VCL_UNINSTANTIATE_SPECIALIZATION)

#AC_SUBST(VCL_UNINSTANTIATE_UNSEEN_SPECIALIZATION)

AC_CXX_STATIC_CONST_INIT_INT

AC_CXX_STATIC_CONST_INIT_FLOAT

AC_CXX_IMPLEMENT_STATIC_CONSTS

AC_CXX_CAN_DO_STATIC_TEMPLATE_MEMBER

AC_CXX_CAN_DO_NON_TYPE_FUNCTION_TEMPLATE_PARAMETER

AC_CXX_NEED_FRIEND_FOR_TEMPLATE_OVERLOAD

AC_CXX_OVERLOAD_CAST

AC_CXX_NULL_TMPL_ARGS

AC_CXX_NO_STATIC_DATA_MEMBERS

AC_CXX_HAS_TEMPLATE_SYMBOLS

AC_CXX_CAN_DO_IMPLICIT_TEMPLATES
if test "$VCL_CAN_DO_IMPLICIT_TEMPLATES" = "0" -a "$VCL_USE_IMPLICIT_TEMPLATES" = "1"; then
  echo "Warning: turning off implicit template instantiation";
  VCL_USE_IMPLICIT_TEMPLATES="0";
fi

#VCL_DFL_TYPE_PARAM_STLDECL
#VCL_DFL_TMPL_PARAM_STLDECL
#VCL_DFL_TMPL_ARG
AC_CXX_CAN_DO_COMPLETE_DEFAULT_TYPE_PARAMETER
if test "$VCL_CAN_DO_COMPLETE_DEFAULT_TYPE_PARAMETER" = "1"; then
AC_CXX_CAN_DO_TEMPLATE_DEFAULT_TYPE_PARAMETER
else
VCL_CAN_DO_TEMPLATE_DEFAULT_TYPE_PARAMETER="0";
export VCL_CAN_DO_TEMPLATE_DEFAULT_TYPE_PARAMETER;
fi
#AC_CXX_DEFAULT_TMPL_ARG

AC_CXX_SUNPRO_CLASS_SCOPE_HACK

AC_CXX_HAS_EXCEPTIONS

AC_CXX_HAS_NAMESPACES

AC_CXX_ALLOWS_NAMESPACE_STD

if test "$VCL_ALLOWS_NAMESPACE_STD" = "1"; then
AC_CXX_NEEDS_NAMESPACE_STD
else
VCL_NEEDS_NAMESPACE_STD="0"; export VCL_NEEDS_NAMESPACE_STD
fi


## architecture
AC_C_BIGENDIAN
if test "$ac_cv_c_bigendian" = "yes"; then
  VCL_BIG_ENDIAN=1;
  VCL_LITTLE_ENDIAN=0;
else
  VCL_BIG_ENDIAN=0;
  VCL_LITTLE_ENDIAN=1;
fi
export VCL_BIG_ENDIAN
export VCL_LITTLE_ENDIAN




ifelse([],[],[
## standard header files.
AC_CXX_HAS_HEADER(cassert,VCL_CXX_HAS_HEADER_CASSERT)
AC_CXX_HAS_HEADER(ciso646,VCL_CXX_HAS_HEADER_CISO646)
AC_CXX_HAS_HEADER(csetjmp,VCL_CXX_HAS_HEADER_CSETJMP)
AC_CXX_HAS_HEADER(cstdio,VCL_CXX_HAS_HEADER_CSTDIO)
AC_CXX_HAS_HEADER(ctime,VCL_CXX_HAS_HEADER_CTIME)
AC_CXX_HAS_HEADER(cctype,VCL_CXX_HAS_HEADER_CCTYPE)
AC_CXX_HAS_HEADER(climits,VCL_CXX_HAS_HEADER_CLIMITS)
AC_CXX_HAS_HEADER(csignal,VCL_CXX_HAS_HEADER_CSIGNAL)
AC_CXX_HAS_HEADER(cstdlib,VCL_CXX_HAS_HEADER_CSTDLIB)
AC_CXX_HAS_HEADER(cwchar,VCL_CXX_HAS_HEADER_CWCHAR)
AC_CXX_HAS_HEADER(cerrno,VCL_CXX_HAS_HEADER_CERRNO)
AC_CXX_HAS_HEADER(clocale,VCL_CXX_HAS_HEADER_CLOCALE)
AC_CXX_HAS_HEADER(cstdarg,VCL_CXX_HAS_HEADER_CSTDARG)
AC_CXX_HAS_HEADER(cstring,VCL_CXX_HAS_HEADER_CSTRING)
AC_CXX_HAS_HEADER(cwctype,VCL_CXX_HAS_HEADER_CWCTYPE)
AC_CXX_HAS_HEADER(cfloat,VCL_CXX_HAS_HEADER_CFLOAT)
AC_CXX_HAS_HEADER(cmath,VCL_CXX_HAS_HEADER_CMATH)
AC_CXX_HAS_HEADER(cstddef,VCL_CXX_HAS_HEADER_CSTDDEF)
AC_CXX_HAS_HEADER(algorithm,VCL_CXX_HAS_HEADER_ALGORITHM)
AC_CXX_HAS_HEADER(iomanip,VCL_CXX_HAS_HEADER_IOMANIP)
AC_CXX_HAS_HEADER(list,VCL_CXX_HAS_HEADER_LIST)
AC_CXX_HAS_HEADER(ostream,VCL_CXX_HAS_HEADER_OSTREAM)
AC_CXX_HAS_HEADER(streambuf,VCL_CXX_HAS_HEADER_STREAMBUF)
AC_CXX_HAS_HEADER(bitset,VCL_CXX_HAS_HEADER_BITSET)
AC_CXX_HAS_HEADER(ios,VCL_CXX_HAS_HEADER_IOS)
AC_CXX_HAS_HEADER(locale,VCL_CXX_HAS_HEADER_LOCALE)
AC_CXX_HAS_HEADER(queue,VCL_CXX_HAS_HEADER_QUEUE)
AC_CXX_HAS_HEADER(string,VCL_CXX_HAS_HEADER_STRING)
AC_CXX_HAS_HEADER(complex,VCL_CXX_HAS_HEADER_COMPLEX)
AC_CXX_HAS_HEADER(iosfwd,VCL_CXX_HAS_HEADER_IOSFWD)
AC_CXX_HAS_HEADER(map,VCL_CXX_HAS_HEADER_MAP)
AC_CXX_HAS_HEADER(set,VCL_CXX_HAS_HEADER_SET)
AC_CXX_HAS_HEADER(typeinfo,VCL_CXX_HAS_HEADER_TYPEINFO)
AC_CXX_HAS_HEADER(deque,VCL_CXX_HAS_HEADER_DEQUE)
AC_CXX_HAS_HEADER(iostream,VCL_CXX_HAS_HEADER_IOSTREAM)
AC_CXX_HAS_HEADER(memory,VCL_CXX_HAS_HEADER_MEMORY)
AC_CXX_HAS_HEADER(sstream,VCL_CXX_HAS_HEADER_SSTREAM)
AC_CXX_HAS_HEADER(utility,VCL_CXX_HAS_HEADER_UTILITY)
AC_CXX_HAS_HEADER(exception,VCL_CXX_HAS_HEADER_EXCEPTION)
AC_CXX_HAS_HEADER(istream,VCL_CXX_HAS_HEADER_ISTREAM)
AC_CXX_HAS_HEADER(new,VCL_CXX_HAS_HEADER_NEW)
AC_CXX_HAS_HEADER(stack,VCL_CXX_HAS_HEADER_STACK)
AC_CXX_HAS_HEADER(valarray,VCL_CXX_HAS_HEADER_VALARRAY)
AC_CXX_HAS_HEADER(fstream,VCL_CXX_HAS_HEADER_FSTREAM)
AC_CXX_HAS_HEADER(iterator,VCL_CXX_HAS_HEADER_ITERATOR)
AC_CXX_HAS_HEADER(numeric,VCL_CXX_HAS_HEADER_NUMERIC)
AC_CXX_HAS_HEADER(stdexcept,VCL_CXX_HAS_HEADER_STDEXCEPT)
AC_CXX_HAS_HEADER(vector,VCL_CXX_HAS_HEADER_VECTOR)
AC_CXX_HAS_HEADER(functional,VCL_CXX_HAS_HEADER_FUNCTIONAL)
AC_CXX_HAS_HEADER(limits,VCL_CXX_HAS_HEADER_LIMITS)
AC_CXX_HAS_HEADER(strstream,VCL_CXX_HAS_HEADER_STRSTREAM)
])

#--------------------------------------------------------------------------------
# SUBSTITUTIONS

# manual
AC_SUBST(VCL_USE_NATIVE_STL)
AC_SUBST(VCL_USE_NATIVE_COMPLEX)
AC_SUBST(VCL_USE_IMPLICIT_TEMPLATES)

# compiler
AC_SUBST(VCL_HAS_BOOL)
AC_SUBST(VCL_HAS_DYNAMIC_CAST)
AC_SUBST(VCL_HAS_TYPENAME)
AC_SUBST(VCL_HAS_EXPORT)
AC_SUBST(VCL_HAS_MUTABLE)
AC_SUBST(VCL_HAS_EXPLICIT)
AC_SUBST(VCL_STATIC_CONST_INIT_INT)
AC_SUBST(VCL_STATIC_CONST_INIT_FLOAT)
AC_SUBST(VCL_IMPLEMENT_STATIC_CONSTS)
AC_SUBST(VCL_FOR_SCOPE_HACK)
AC_SUBST(VCL_HAS_MEMBER_TEMPLATES)
AC_SUBST(VCL_CAN_DO_PARTIAL_SPECIALIZATION)
AC_SUBST(VCL_ALLOWS_INLINE_INSTANTIATION)
AC_SUBST(VCL_NEEDS_INLINE_INSTANTIATION)
#AC_SUBST(VCL_DO_NOT_INSTANTIATE)
#AC_SUBST(VCL_UNINSTANTIATE_SPECIALIZATION)
#AC_SUBST(VCL_UNINSTANTIATE_UNSEEN_SPECIALIZATION) # dubious
AC_SUBST(VCL_CAN_DO_STATIC_TEMPLATE_MEMBER)
AC_SUBST(VCL_CAN_DO_NON_TYPE_FUNCTION_TEMPLATE_PARAMETER)
AC_SUBST(VCL_NEED_FRIEND_FOR_TEMPLATE_OVERLOAD)
AC_SUBST(VCL_OVERLOAD_CAST)
AC_SUBST(VCL_DEFINE_SPECIALIZATION)
AC_SUBST(VCL_NULL_TMPL_ARGS)
AC_SUBST(VCL_DEFAULT_VALUE)
AC_SUBST(VCL_NO_STATIC_DATA_MEMBERS)
AC_SUBST(VCL_HAS_TEMPLATE_SYMBOLS)
#
AC_SUBST(VCL_DEFAULT_TMPL_ARG)
AC_SUBST(VCL_CAN_DO_COMPLETE_DEFAULT_TYPE_PARAMETER)
AC_SUBST(VCL_CAN_DO_TEMPLATE_DEFAULT_TYPE_PARAMETER)
AC_SUBST(VCL_SUNPRO_CLASS_SCOPE_HACK)
#
AC_SUBST(VCL_HAS_EXCEPTIONS)
AC_SUBST(VCL_HAS_NAMESPACES)
AC_SUBST(VCL_ALLOWS_NAMESPACE_STD)
AC_SUBST(VCL_NEEDS_NAMESPACE_STD)
#
AC_SUBST(VCL_BIG_ENDIAN)
AC_SUBST(VCL_LITTLE_ENDIAN)

# standard header files.
AC_SUBST(VCL_CXX_HAS_HEADER_CASSERT)
AC_SUBST(VCL_CXX_HAS_HEADER_CISO646)
AC_SUBST(VCL_CXX_HAS_HEADER_CSETJMP)
AC_SUBST(VCL_CXX_HAS_HEADER_CSTDIO)
AC_SUBST(VCL_CXX_HAS_HEADER_CTIME)
AC_SUBST(VCL_CXX_HAS_HEADER_CCTYPE)
AC_SUBST(VCL_CXX_HAS_HEADER_CLIMITS)
AC_SUBST(VCL_CXX_HAS_HEADER_CSIGNAL)
AC_SUBST(VCL_CXX_HAS_HEADER_CSTDLIB)
AC_SUBST(VCL_CXX_HAS_HEADER_CWCHAR)
AC_SUBST(VCL_CXX_HAS_HEADER_CERRNO)
AC_SUBST(VCL_CXX_HAS_HEADER_CLOCALE)
AC_SUBST(VCL_CXX_HAS_HEADER_CSTDARG)
AC_SUBST(VCL_CXX_HAS_HEADER_CSTRING)
AC_SUBST(VCL_CXX_HAS_HEADER_CWCTYPE)
AC_SUBST(VCL_CXX_HAS_HEADER_CFLOAT)
AC_SUBST(VCL_CXX_HAS_HEADER_CMATH)
AC_SUBST(VCL_CXX_HAS_HEADER_CSTDDEF)
AC_SUBST(VCL_CXX_HAS_HEADER_ALGORITHM)
AC_SUBST(VCL_CXX_HAS_HEADER_IOMANIP)
AC_SUBST(VCL_CXX_HAS_HEADER_LIST)
AC_SUBST(VCL_CXX_HAS_HEADER_OSTREAM)
AC_SUBST(VCL_CXX_HAS_HEADER_STREAMBUF)
AC_SUBST(VCL_CXX_HAS_HEADER_BITSET)
AC_SUBST(VCL_CXX_HAS_HEADER_IOS)
AC_SUBST(VCL_CXX_HAS_HEADER_LOCALE)
AC_SUBST(VCL_CXX_HAS_HEADER_QUEUE)
AC_SUBST(VCL_CXX_HAS_HEADER_STRING)
AC_SUBST(VCL_CXX_HAS_HEADER_COMPLEX)
AC_SUBST(VCL_CXX_HAS_HEADER_IOSFWD)
AC_SUBST(VCL_CXX_HAS_HEADER_MAP)
AC_SUBST(VCL_CXX_HAS_HEADER_SET)
AC_SUBST(VCL_CXX_HAS_HEADER_TYPEINFO)
AC_SUBST(VCL_CXX_HAS_HEADER_DEQUE)
AC_SUBST(VCL_CXX_HAS_HEADER_IOSTREAM)
AC_SUBST(VCL_CXX_HAS_HEADER_MEMORY)
AC_SUBST(VCL_CXX_HAS_HEADER_SSTREAM)
AC_SUBST(VCL_CXX_HAS_HEADER_UTILITY)
AC_SUBST(VCL_CXX_HAS_HEADER_EXCEPTION)
AC_SUBST(VCL_CXX_HAS_HEADER_ISTREAM)
AC_SUBST(VCL_CXX_HAS_HEADER_NEW)
AC_SUBST(VCL_CXX_HAS_HEADER_STACK)
AC_SUBST(VCL_CXX_HAS_HEADER_VALARRAY)
AC_SUBST(VCL_CXX_HAS_HEADER_FSTREAM)
AC_SUBST(VCL_CXX_HAS_HEADER_ITERATOR)
AC_SUBST(VCL_CXX_HAS_HEADER_NUMERIC)
AC_SUBST(VCL_CXX_HAS_HEADER_STDEXCEPT)
AC_SUBST(VCL_CXX_HAS_HEADER_VECTOR)
AC_SUBST(VCL_CXX_HAS_HEADER_FUNCTIONAL)
AC_SUBST(VCL_CXX_HAS_HEADER_LIMITS)
AC_SUBST(VCL_CXX_HAS_HEADER_STRSTREAM)



# if we are not running g++ then we might need some other flags
# to get the templates compiled correctly
CMAKE_TEMPLATE_FLAGS=""
if test $ac_cv_prog_gxx = no; then
    echo $ac_n "checking whether ${CXX} accepts -ptused -no_prelink""... $ac_c" 1>&6
  echo 'void f(){}' > conftest.cc
  if test -z "`${CXX} -ptused -no_prelink -c conftest.cc 2>&1`"; then
    echo "$ac_t""yes" 1>&6
    CMAKE_TEMPLATE_FLAGS="-ptused -no_prelink"
  else
    echo "$ac_t""no" 1>&6
  fi
  rm -f conftest*
  echo $ac_n "checking whether ${CXX} accepts -instances=semiexplicit""... $ac_c" 1>&6
  echo 'void f(){}' > conftest.cc
  if test -z "`${CXX} -instances=static -c conftest.cc 2>&1`"; then
    echo "$ac_t""yes" 1>&6
    CMAKE_TEMPLATE_FLAGS="-instances=static"
  else
    echo "$ac_t""no" 1>&6
  fi
fi
AC_SUBST(CMAKE_TEMPLATE_FLAGS)



if test -f $CMAKE_CONFIG_DIR/CMakeLocal.make.in; then
   echo "create CMakeLocal.make from $CMAKE_CONFIG_DIR/CMakeLocal.make.in"
   rm -f local.make
   cp $CMAKE_CONFIG_DIR/local.make.in local.make
else
   echo "no $CMAKE_CONFIG_DIR/CMakeLocal.make.in creating an empty CMakeLocal.make file"
   rm -f CMakeLocal.make
   touch CMakeLocal.make
fi

AC_SUBST(EXTRA_GCC_FLAG)



#===========================================================================
# from vxl/configure.in



# fsm@robots. after running glimpse, I can't find anywhere but 
# vxl/vbl/vbl_timer.cxx which uses TWO_ARG_GETTIME. Can someone
# confirm that?
# If so, that would mean we can remove the makefile -D flags
# to do with time.
if test "$ac_twoarg_timeofday" = "yes"; then
  VXL_TWO_ARG_GETTIME="1"
else
  VXL_TWO_ARG_GETTIME="0"
fi

# fsm@robots
AC_VXL_UNISTD
AC_VXL_WORDS
AC_VXL_HAS_QSORT
AC_CHECK_HEADER(ieeefp.h,[VXL_HAS_IEEEFP_H=1],[VXL_HAS_IEEEFP_H=0])
AC_VXL_MATH_HAS_FINITE
AC_VXL_IEEEFP_HAS_FINITE
AC_VXL_STDLIB_RAND48


# check for bigendian
AC_C_BIGENDIAN
if test $ac_cv_c_bigendian = no; then
  VXL_BIG_ENDIAN="0";
  VXL_LITTLE_ENDIAN="1";
else
  VXL_BIG_ENDIAN="1";
  VXL_LITTLE_ENDIAN="0";
fi

#--------------------------------------------------------------------------------
# complete list of substitutions:

# libraries
AC_SUBST(VXL_UNISTD_HAS_USECONDS_T)
AC_SUBST(VXL_UNISTD_HAS_INTPTR_T)
AC_SUBST(VXL_UNISTD_HAS_UALARM)
AC_SUBST(VXL_UNISTD_HAS_USLEEP)
AC_SUBST(VXL_UNISTD_HAS_LCHOWN)
AC_SUBST(VXL_UNISTD_HAS_PREAD)
AC_SUBST(VXL_UNISTD_HAS_PWRITE)
AC_SUBST(VXL_UNISTD_HAS_TELL)
AC_SUBST(VXL_STDLIB_HAS_QSORT)
AC_SUBST(VXL_STDLIB_HAS_LRAND48)
AC_SUBST(VXL_STDLIB_HAS_DRAND48)
AC_SUBST(VXL_IEEEFP_HAS_FINITE)
AC_SUBST(VXL_MATH_HAS_FINITE)
AC_SUBST(VXL_UNISTD_USLEEP_IS_VOID)
AC_SUBST(VXL_TWO_ARG_GETTIME)
AC_SUBST(VXL_HAS_IEEEFP_H)

# architecture
AC_SUBST(VXL_BIG_ENDIAN)
AC_SUBST(VXL_LITTLE_ENDIAN)
AC_SUBST(VXL_INT_8)
AC_SUBST(VXL_INT_16)
AC_SUBST(VXL_INT_32)
AC_SUBST(VXL_INT_64)
AC_SUBST(VXL_IEEE_32)
AC_SUBST(VXL_IEEE_64)
#AC_SUBST(VXL_IEEE_96)
#AC_SUBST(VXL_IEEE_128)




# output to the top level Makefile, which must be present
# create the toplevel CMakeTargets.make file
# Create all the make file fragments in CMake
# Create the Makefile in CMake/Source

# Testing system configuration
AC_PATH_PROGS(MAKECOMMAND, gmake make)
AC_PATH_PROGS(CVSCOMMAND, cvs )
AC_PATH_PROGS(GREPCOMMAND, grep )
AC_PATH_PROGS(COMPRESSIONCOMMAND, gzip compress zip )
AC_PATH_PROGS(TCLSHCOMMAND, cygtclsh80 tclsh tclsh82 tclsh8.2 tclsh80 tclsh8.2 )
AC_PATH_PROGS(GUNZIPCOMMAND, gunzip )

AC_SUBST(MAKECOMMAND)
AC_SUBST(CVSCOMMAND)
AC_SUBST(GREPCOMMAND)
AC_SUBST(GUNZIPCOMMAND)
AC_SUBST(COMPRESSIONCOMMAND)
AC_SUBST(TCLSHCOMMAND)


# generate output files for CMake

AC_OUTPUT(
Makefile:CMake/CMakeTopMakefileTemplate.in
CMakeTargets.make:CMake/CMakeTargets.make.in 
CMakeSystemConfig.cmake:CMake/CMakeSystemConfig.cmake.in
CMake/CMakeSimpleRules.make 
CMake/CMakeMaster.make 
CMake/CMakeVariables.make
CMake/CMakeRules.make 
CMake/Source/CMakeTargets.make:CMake/dummy.in 
CMake/Source/cmConfigure.h
CMake/Source/Makefile
vcl/vcl_config_manual.h~:vcl/vcl_config_manual.h.in
vcl/vcl_config_compiler.h~:vcl/vcl_config_compiler.h.in
vcl/vcl_config_headers.h~:vcl/vcl_config_headers.h.in
vxl/vxl_config.h~:vxl/vxl_config.h.in
)


# only touch files that actually change.
for f in "vcl/vcl_config_manual.h" "vcl/vcl_config_compiler.h" "vcl/vcl_config_headers.h" "vxl/vxl_config.h"; do
# This hangs on my machine (fsm).
# In any case, the inclusion guard should not be derived
# from the pwd. This configure script is for vcl only; it
# is not subordinate to the peculiarities of the current
# or future IUE/TargetJr/VXL build system.
# In addition, we can't assume that everyone has perl in
# his or her path.
  #inclgrd=`echo $f | sed -e 's/\.h$/_h_/'`
  #os=`pwd|sed -e 's/.*\///' -e 's/[.+-]/_/g'`
  #perl -pi -e s/$inclgrd/${inclgrd}${os}_/; ${f}~

  if test -f $f; then
    if diff ${f} ${f}~ 2>&1 >/dev/null ; then
      echo "no change to ${f}"
      rm -f ${f}~
    else
      echo "replacing old ${f}"
      mv -f ${f}~ ${f}
    fi
  else
    echo "creating new ${f}"
    mv -f ${f}~ ${f}
  fi
done


# build the CMakeBuildTargets program
(cd CMake/Source; $MAKECOMMAND CMakeBuildTargets)
# if there is no cache file then create one
if test ! -f $CMAKE_CONFIG_DIR/CMakeCache.txt; then
        echo  CMake/Source/CMakeBuildTargets ${fullSrcDir}/CMakeLists.txt -MakeCache -S${fullSrcDir} -O${CMAKE_CONFIG_DIR} -H${fullSrcDir} -B${CMAKE_CONFIG_DIR}
        CMake/Source/CMakeBuildTargets ${fullSrcDir}/CMakeLists.txt -MakeCache -S${fullSrcDir} -O${CMAKE_CONFIG_DIR} -H${fullSrcDir} -B${CMAKE_CONFIG_DIR}
fi
echo CMakeCache.txt location: ${CMAKE_CONFIG_DIR}/CMakeCache.txt


# force a rebuild of CMakeBuildTargets which will rebuild CMakeTargets.make
# this has to be done because configure generates empty CMakeTargets.make files
# and make programs other than gnu do not like to include make file fragments
# that do not exist, even if they know how to create them.
rm -f CMake/Source/CMakeBuildTargets
rm -f CMake/Source/CMakeBuildTargets.exe
