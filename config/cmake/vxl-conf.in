#===========================================================================
# VXL STUFF

# from vcl/configure.in


#--------------------------------------------------------------------------------
# MANUAL OPTIONS

# use native STL? default is yes.
AC_ARG_ENABLE(emulation-stl,
[  --enable-emulation-stl  use the STL that comes with vcl],
[VCL_USE_NATIVE_STL=0],
[VCL_USE_NATIVE_STL=1])

# use native complex<>? default is yes.
AC_ARG_ENABLE(emulation-complex,
[  --enable-emulation-complex  use the complex<> that comes with vcl],
[VCL_USE_NATIVE_COMPLEX=0],
[VCL_USE_NATIVE_COMPLEX=1])

# use implicit template instantiation?
AC_ARG_ENABLE(implicit-templates,[
  --enable-implicit-templates        enable implicit template instantiation (default)
  --disable-implicit-templates       disable implicit template instantiation
],[
if test "$enable_implicit_templates" = yes; then
  VCL_USE_IMPLICIT_TEMPLATES=1
else
  VCL_USE_IMPLICIT_TEMPLATES=0
fi
export VCL_USE_IMPLICIT_TEMPLATES
],[
VCL_USE_IMPLICIT_TEMPLATES=1
export VCL_USE_IMPLICIT_TEMPLATES
])

#--------------------------------------------------------------------------------
# COMPILER CHARACTERISTICS

# Try to figure out the type of compiler
#
AC_MSG_CHECKING("the C++ compiler type")

if   ( $CXX -v < /dev/null 2>&1 | grep "gcc version" > /dev/null 2>&1); then
  compiler=gcc
  version=`$CXX -v < /dev/null 2>&1 | awk '{if(/gcc version/){print $3}}'`
elif ( $CXX -V < /dev/null 2>&1 | grep "WorkShop" > /dev/null ); then
  compiler=workshop
  version=`$CXX -V < /dev/null 2>&1 | awk '{if(/WorkShop/){print $4}}'`
elif ( $CXX -version < /dev/null 2>&1 | grep "MIPSpro" > /dev/null ); then
  compiler=mipspro
  version=`$CXX -version < /dev/null 2>&1 | awk '{if(/MIPSpro/){print $4}}'`
else
  compiler=unknown
  version=unknown
fi

AC_MSG_RESULT( $compiler version $version )

## syntax
AC_CXX_HAS_BOOL

AC_CXX_HAS_TYPENAME

AC_CXX_HAS_EXPORT

AC_CXX_HAS_MUTABLE

AC_CXX_HAS_EXPLICIT

AC_CXX_HAS_DYNAMIC_CAST

AC_CXX_CHECK_FOR_SCOPE

AC_CXX_DEFAULT_VALUE

AC_CXX_HAS_MEMBER_TEMPLATES

AC_CXX_CAN_DO_PARTIAL_SPECIALIZATION

AC_CXX_DEFINE_SPECIALIZATION

AC_CXX_ALLOWS_INLINE_INSTANTIATION

if test "$VCL_ALLOWS_INLINE_INSTANTIATION" = "1"; then
AC_CXX_NEEDS_INLINE_INSTANTIATION
else
VCL_NEEDS_INLINE_INSTANTIATION="0";
export VCL_NEEDS_INLINE_INSTANTIATION;
fi

#AC_SUBST(VCL_DO_NOT_INSTANTIATE)

#AC_SUBST(VCL_UNINSTANTIATE_SPECIALIZATION)

#AC_SUBST(VCL_UNINSTANTIATE_UNSEEN_SPECIALIZATION)

AC_CXX_STATIC_CONST_INIT_INT

AC_CXX_STATIC_CONST_INIT_FLOAT

AC_CXX_IMPLEMENT_STATIC_CONSTS

AC_CXX_CAN_DO_STATIC_TEMPLATE_MEMBER

AC_CXX_CAN_DO_NON_TYPE_FUNCTION_TEMPLATE_PARAMETER

AC_CXX_NEED_FRIEND_FOR_TEMPLATE_OVERLOAD

AC_CXX_OVERLOAD_CAST

AC_CXX_NULL_TMPL_ARGS

AC_CXX_NO_STATIC_DATA_MEMBERS

AC_CXX_HAS_TEMPLATE_SYMBOLS

AC_CXX_CAN_DO_IMPLICIT_TEMPLATES
if test "$VCL_CAN_DO_IMPLICIT_TEMPLATES" = "0" -a "$VCL_USE_IMPLICIT_TEMPLATES" = "1"; then
  echo "Warning: turning off implicit template instantiation";
  VCL_USE_IMPLICIT_TEMPLATES="0";
fi

#VCL_DFL_TYPE_PARAM_STLDECL
#VCL_DFL_TMPL_PARAM_STLDECL
#VCL_DFL_TMPL_ARG
AC_CXX_CAN_DO_COMPLETE_DEFAULT_TYPE_PARAMETER
if test "$VCL_CAN_DO_COMPLETE_DEFAULT_TYPE_PARAMETER" = "1"; then
AC_CXX_CAN_DO_TEMPLATE_DEFAULT_TYPE_PARAMETER
else
VCL_CAN_DO_TEMPLATE_DEFAULT_TYPE_PARAMETER="0";
export VCL_CAN_DO_TEMPLATE_DEFAULT_TYPE_PARAMETER;
fi
#AC_CXX_DEFAULT_TMPL_ARG

AC_CXX_SUNPRO_CLASS_SCOPE_HACK

AC_CXX_HAS_EXCEPTIONS

AC_CXX_HAS_NAMESPACES

AC_CXX_ALLOWS_NAMESPACE_STD

if test "$VCL_ALLOWS_NAMESPACE_STD" = "1"; then
AC_CXX_NEEDS_NAMESPACE_STD
else
VCL_NEEDS_NAMESPACE_STD="0"; export VCL_NEEDS_NAMESPACE_STD
fi


## architecture
AC_C_BIGENDIAN
if test "$ac_cv_c_bigendian" = "yes"; then
  VCL_BIG_ENDIAN=1;
  VCL_LITTLE_ENDIAN=0;
else
  VCL_BIG_ENDIAN=0;
  VCL_LITTLE_ENDIAN=1;
fi
export VCL_BIG_ENDIAN
export VCL_LITTLE_ENDIAN




ifelse([],[],[
## standard header files.
AC_CXX_HAS_HEADER(cassert,VCL_CXX_HAS_HEADER_CASSERT)
AC_CXX_HAS_HEADER(ciso646,VCL_CXX_HAS_HEADER_CISO646)
AC_CXX_HAS_HEADER(csetjmp,VCL_CXX_HAS_HEADER_CSETJMP)
AC_CXX_HAS_HEADER(cstdio,VCL_CXX_HAS_HEADER_CSTDIO)
AC_CXX_HAS_HEADER(ctime,VCL_CXX_HAS_HEADER_CTIME)
AC_CXX_HAS_HEADER(cctype,VCL_CXX_HAS_HEADER_CCTYPE)
AC_CXX_HAS_HEADER(climits,VCL_CXX_HAS_HEADER_CLIMITS)
AC_CXX_HAS_HEADER(csignal,VCL_CXX_HAS_HEADER_CSIGNAL)
AC_CXX_HAS_HEADER(cstdlib,VCL_CXX_HAS_HEADER_CSTDLIB)
AC_CXX_HAS_HEADER(cwchar,VCL_CXX_HAS_HEADER_CWCHAR)
AC_CXX_HAS_HEADER(cerrno,VCL_CXX_HAS_HEADER_CERRNO)
AC_CXX_HAS_HEADER(clocale,VCL_CXX_HAS_HEADER_CLOCALE)
AC_CXX_HAS_HEADER(cstdarg,VCL_CXX_HAS_HEADER_CSTDARG)
AC_CXX_HAS_HEADER(cstring,VCL_CXX_HAS_HEADER_CSTRING)
AC_CXX_HAS_HEADER(cwctype,VCL_CXX_HAS_HEADER_CWCTYPE)
AC_CXX_HAS_HEADER(cfloat,VCL_CXX_HAS_HEADER_CFLOAT)
AC_CXX_HAS_HEADER(cmath,VCL_CXX_HAS_HEADER_CMATH)
AC_CXX_HAS_HEADER(cstddef,VCL_CXX_HAS_HEADER_CSTDDEF)
AC_CXX_HAS_HEADER(algorithm,VCL_CXX_HAS_HEADER_ALGORITHM)
AC_CXX_HAS_HEADER(iomanip,VCL_CXX_HAS_HEADER_IOMANIP)
AC_CXX_HAS_HEADER(list,VCL_CXX_HAS_HEADER_LIST)
AC_CXX_HAS_HEADER(ostream,VCL_CXX_HAS_HEADER_OSTREAM)
AC_CXX_HAS_HEADER(streambuf,VCL_CXX_HAS_HEADER_STREAMBUF)
AC_CXX_HAS_HEADER(bitset,VCL_CXX_HAS_HEADER_BITSET)
AC_CXX_HAS_HEADER(ios,VCL_CXX_HAS_HEADER_IOS)
AC_CXX_HAS_HEADER(locale,VCL_CXX_HAS_HEADER_LOCALE)
AC_CXX_HAS_HEADER(queue,VCL_CXX_HAS_HEADER_QUEUE)
AC_CXX_HAS_HEADER(string,VCL_CXX_HAS_HEADER_STRING)
AC_CXX_HAS_HEADER(complex,VCL_CXX_HAS_HEADER_COMPLEX)
AC_CXX_HAS_HEADER(iosfwd,VCL_CXX_HAS_HEADER_IOSFWD)
AC_CXX_HAS_HEADER(map,VCL_CXX_HAS_HEADER_MAP)
AC_CXX_HAS_HEADER(set,VCL_CXX_HAS_HEADER_SET)
AC_CXX_HAS_HEADER(typeinfo,VCL_CXX_HAS_HEADER_TYPEINFO)
AC_CXX_HAS_HEADER(deque,VCL_CXX_HAS_HEADER_DEQUE)
AC_CXX_HAS_HEADER(iostream,VCL_CXX_HAS_HEADER_IOSTREAM)
AC_CXX_HAS_HEADER(memory,VCL_CXX_HAS_HEADER_MEMORY)
AC_CXX_HAS_HEADER(sstream,VCL_CXX_HAS_HEADER_SSTREAM)
AC_CXX_HAS_HEADER(utility,VCL_CXX_HAS_HEADER_UTILITY)
AC_CXX_HAS_HEADER(exception,VCL_CXX_HAS_HEADER_EXCEPTION)
AC_CXX_HAS_HEADER(istream,VCL_CXX_HAS_HEADER_ISTREAM)
AC_CXX_HAS_HEADER(new,VCL_CXX_HAS_HEADER_NEW)
AC_CXX_HAS_HEADER(stack,VCL_CXX_HAS_HEADER_STACK)
AC_CXX_HAS_HEADER(valarray,VCL_CXX_HAS_HEADER_VALARRAY)
AC_CXX_HAS_HEADER(fstream,VCL_CXX_HAS_HEADER_FSTREAM)
AC_CXX_HAS_HEADER(iterator,VCL_CXX_HAS_HEADER_ITERATOR)
AC_CXX_HAS_HEADER(numeric,VCL_CXX_HAS_HEADER_NUMERIC)
AC_CXX_HAS_HEADER(stdexcept,VCL_CXX_HAS_HEADER_STDEXCEPT)
AC_CXX_HAS_HEADER(vector,VCL_CXX_HAS_HEADER_VECTOR)
AC_CXX_HAS_HEADER(functional,VCL_CXX_HAS_HEADER_FUNCTIONAL)
AC_CXX_HAS_HEADER(limits,VCL_CXX_HAS_HEADER_LIMITS)
AC_CXX_HAS_HEADER(strstream,VCL_CXX_HAS_HEADER_STRSTREAM)
])

#--------------------------------------------------------------------------------
# SUBSTITUTIONS

# manual
AC_SUBST(VCL_USE_NATIVE_STL)
AC_SUBST(VCL_USE_NATIVE_COMPLEX)
AC_SUBST(VCL_USE_IMPLICIT_TEMPLATES)

# compiler
AC_SUBST(VCL_HAS_BOOL)
AC_SUBST(VCL_HAS_DYNAMIC_CAST)
AC_SUBST(VCL_HAS_TYPENAME)
AC_SUBST(VCL_HAS_EXPORT)
AC_SUBST(VCL_HAS_MUTABLE)
AC_SUBST(VCL_HAS_EXPLICIT)
AC_SUBST(VCL_STATIC_CONST_INIT_INT)
AC_SUBST(VCL_STATIC_CONST_INIT_FLOAT)
AC_SUBST(VCL_IMPLEMENT_STATIC_CONSTS)
AC_SUBST(VCL_FOR_SCOPE_HACK)
AC_SUBST(VCL_HAS_MEMBER_TEMPLATES)
AC_SUBST(VCL_CAN_DO_PARTIAL_SPECIALIZATION)
AC_SUBST(VCL_ALLOWS_INLINE_INSTANTIATION)
AC_SUBST(VCL_NEEDS_INLINE_INSTANTIATION)
#AC_SUBST(VCL_DO_NOT_INSTANTIATE)
#AC_SUBST(VCL_UNINSTANTIATE_SPECIALIZATION)
#AC_SUBST(VCL_UNINSTANTIATE_UNSEEN_SPECIALIZATION) # dubious
AC_SUBST(VCL_CAN_DO_STATIC_TEMPLATE_MEMBER)
AC_SUBST(VCL_CAN_DO_NON_TYPE_FUNCTION_TEMPLATE_PARAMETER)
AC_SUBST(VCL_NEED_FRIEND_FOR_TEMPLATE_OVERLOAD)
AC_SUBST(VCL_OVERLOAD_CAST)
AC_SUBST(VCL_DEFINE_SPECIALIZATION)
AC_SUBST(VCL_NULL_TMPL_ARGS)
AC_SUBST(VCL_DEFAULT_VALUE)
AC_SUBST(VCL_NO_STATIC_DATA_MEMBERS)
AC_SUBST(VCL_HAS_TEMPLATE_SYMBOLS)
#
AC_SUBST(VCL_DEFAULT_TMPL_ARG)
AC_SUBST(VCL_CAN_DO_COMPLETE_DEFAULT_TYPE_PARAMETER)
AC_SUBST(VCL_CAN_DO_TEMPLATE_DEFAULT_TYPE_PARAMETER)
AC_SUBST(VCL_SUNPRO_CLASS_SCOPE_HACK)
#
AC_SUBST(VCL_HAS_EXCEPTIONS)
AC_SUBST(VCL_HAS_NAMESPACES)
AC_SUBST(VCL_ALLOWS_NAMESPACE_STD)
AC_SUBST(VCL_NEEDS_NAMESPACE_STD)
#
AC_SUBST(VCL_BIG_ENDIAN)
AC_SUBST(VCL_LITTLE_ENDIAN)

# standard header files.
AC_SUBST(VCL_CXX_HAS_HEADER_CASSERT)
AC_SUBST(VCL_CXX_HAS_HEADER_CISO646)
AC_SUBST(VCL_CXX_HAS_HEADER_CSETJMP)
AC_SUBST(VCL_CXX_HAS_HEADER_CSTDIO)
AC_SUBST(VCL_CXX_HAS_HEADER_CTIME)
AC_SUBST(VCL_CXX_HAS_HEADER_CCTYPE)
AC_SUBST(VCL_CXX_HAS_HEADER_CLIMITS)
AC_SUBST(VCL_CXX_HAS_HEADER_CSIGNAL)
AC_SUBST(VCL_CXX_HAS_HEADER_CSTDLIB)
AC_SUBST(VCL_CXX_HAS_HEADER_CWCHAR)
AC_SUBST(VCL_CXX_HAS_HEADER_CERRNO)
AC_SUBST(VCL_CXX_HAS_HEADER_CLOCALE)
AC_SUBST(VCL_CXX_HAS_HEADER_CSTDARG)
AC_SUBST(VCL_CXX_HAS_HEADER_CSTRING)
AC_SUBST(VCL_CXX_HAS_HEADER_CWCTYPE)
AC_SUBST(VCL_CXX_HAS_HEADER_CFLOAT)
AC_SUBST(VCL_CXX_HAS_HEADER_CMATH)
AC_SUBST(VCL_CXX_HAS_HEADER_CSTDDEF)
AC_SUBST(VCL_CXX_HAS_HEADER_ALGORITHM)
AC_SUBST(VCL_CXX_HAS_HEADER_IOMANIP)
AC_SUBST(VCL_CXX_HAS_HEADER_LIST)
AC_SUBST(VCL_CXX_HAS_HEADER_OSTREAM)
AC_SUBST(VCL_CXX_HAS_HEADER_STREAMBUF)
AC_SUBST(VCL_CXX_HAS_HEADER_BITSET)
AC_SUBST(VCL_CXX_HAS_HEADER_IOS)
AC_SUBST(VCL_CXX_HAS_HEADER_LOCALE)
AC_SUBST(VCL_CXX_HAS_HEADER_QUEUE)
AC_SUBST(VCL_CXX_HAS_HEADER_STRING)
AC_SUBST(VCL_CXX_HAS_HEADER_COMPLEX)
AC_SUBST(VCL_CXX_HAS_HEADER_IOSFWD)
AC_SUBST(VCL_CXX_HAS_HEADER_MAP)
AC_SUBST(VCL_CXX_HAS_HEADER_SET)
AC_SUBST(VCL_CXX_HAS_HEADER_TYPEINFO)
AC_SUBST(VCL_CXX_HAS_HEADER_DEQUE)
AC_SUBST(VCL_CXX_HAS_HEADER_IOSTREAM)
AC_SUBST(VCL_CXX_HAS_HEADER_MEMORY)
AC_SUBST(VCL_CXX_HAS_HEADER_SSTREAM)
AC_SUBST(VCL_CXX_HAS_HEADER_UTILITY)
AC_SUBST(VCL_CXX_HAS_HEADER_EXCEPTION)
AC_SUBST(VCL_CXX_HAS_HEADER_ISTREAM)
AC_SUBST(VCL_CXX_HAS_HEADER_NEW)
AC_SUBST(VCL_CXX_HAS_HEADER_STACK)
AC_SUBST(VCL_CXX_HAS_HEADER_VALARRAY)
AC_SUBST(VCL_CXX_HAS_HEADER_FSTREAM)
AC_SUBST(VCL_CXX_HAS_HEADER_ITERATOR)
AC_SUBST(VCL_CXX_HAS_HEADER_NUMERIC)
AC_SUBST(VCL_CXX_HAS_HEADER_STDEXCEPT)
AC_SUBST(VCL_CXX_HAS_HEADER_VECTOR)
AC_SUBST(VCL_CXX_HAS_HEADER_FUNCTIONAL)
AC_SUBST(VCL_CXX_HAS_HEADER_LIMITS)
AC_SUBST(VCL_CXX_HAS_HEADER_STRSTREAM)


# from vxl/configure.in



# fsm@robots. after running glimpse, I can't find anywhere but 
# vxl/vbl/vbl_timer.cxx which uses TWO_ARG_GETTIME. Can someone
# confirm that?
# If so, that would mean we can remove the makefile -D flags
# to do with time.
if test "$ac_twoarg_timeofday" = "yes"; then
  VXL_TWO_ARG_GETTIME="1"
else
  VXL_TWO_ARG_GETTIME="0"
fi

# fsm@robots
AC_VXL_UNISTD
AC_VXL_WORDS
AC_VXL_HAS_QSORT
AC_CHECK_HEADER(ieeefp.h,[VXL_HAS_IEEEFP_H=1],[VXL_HAS_IEEEFP_H=0])
AC_VXL_MATH_HAS_FINITE
AC_VXL_IEEEFP_HAS_FINITE
AC_VXL_STDLIB_RAND48


# check for bigendian
AC_C_BIGENDIAN
if test $ac_cv_c_bigendian = no; then
  VXL_BIG_ENDIAN="0";
  VXL_LITTLE_ENDIAN="1";
else
  VXL_BIG_ENDIAN="1";
  VXL_LITTLE_ENDIAN="0";
fi

#--------------------------------------------------------------------------------
# complete list of substitutions:

# libraries
AC_SUBST(VXL_UNISTD_HAS_USECONDS_T)
AC_SUBST(VXL_UNISTD_HAS_INTPTR_T)
AC_SUBST(VXL_UNISTD_HAS_UALARM)
AC_SUBST(VXL_UNISTD_HAS_USLEEP)
AC_SUBST(VXL_UNISTD_HAS_LCHOWN)
AC_SUBST(VXL_UNISTD_HAS_PREAD)
AC_SUBST(VXL_UNISTD_HAS_PWRITE)
AC_SUBST(VXL_UNISTD_HAS_TELL)
AC_SUBST(VXL_STDLIB_HAS_QSORT)
AC_SUBST(VXL_STDLIB_HAS_LRAND48)
AC_SUBST(VXL_STDLIB_HAS_DRAND48)
AC_SUBST(VXL_IEEEFP_HAS_FINITE)
AC_SUBST(VXL_MATH_HAS_FINITE)
AC_SUBST(VXL_UNISTD_USLEEP_IS_VOID)
AC_SUBST(VXL_TWO_ARG_GETTIME)
AC_SUBST(VXL_HAS_IEEEFP_H)

# architecture
AC_SUBST(VXL_BIG_ENDIAN)
AC_SUBST(VXL_LITTLE_ENDIAN)
AC_SUBST(VXL_INT_8)
AC_SUBST(VXL_INT_16)
AC_SUBST(VXL_INT_32)
AC_SUBST(VXL_INT_64)
AC_SUBST(VXL_IEEE_32)
AC_SUBST(VXL_IEEE_64)
#AC_SUBST(VXL_IEEE_96)
#AC_SUBST(VXL_IEEE_128)

AC_OUTPUT(
vcl/vcl_config_manual.h~:vcl/vcl_config_manual.h.in
vcl/vcl_config_compiler.h~:vcl/vcl_config_compiler.h.in
vcl/vcl_config_headers.h~:vcl/vcl_config_headers.h.in
vxl/vxl_config.h~:vxl/vxl_config.h.in
)

# only touch files that actually change.
for f in "vcl/vcl_config_manual.h" "vcl/vcl_config_compiler.h" "vcl/vcl_config_headers.h" "vxl/vxl_config.h"; do
# This hangs on my machine (fsm).
# In any case, the inclusion guard should not be derived
# from the pwd. This configure script is for vcl only; it
# is not subordinate to the peculiarities of the current
# or future IUE/TargetJr/VXL build system.
# In addition, we can't assume that everyone has perl in
# his or her path.
  #inclgrd=`echo $f | sed -e 's/\.h$/_h_/'`
  #os=`pwd|sed -e 's/.*\///' -e 's/[.+-]/_/g'`
  #perl -pi -e s/$inclgrd/${inclgrd}${os}_/; ${f}~

  if test -f $f; then
    if diff ${f} ${f}~ 2>&1 >/dev/null ; then
      echo "no change to ${f}"
      rm -f ${f}~
    else
      echo "replacing old ${f}"
      mv -f ${f}~ ${f}
    fi
  else
    echo "creating new ${f}"
    mv -f ${f}~ ${f}
  fi
done

# END VXL STUFF
#=========================================================================