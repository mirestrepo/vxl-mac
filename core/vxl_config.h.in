#ifndef vxl_config_h_
#define vxl_config_h_

// this file either is or was generated from vxl_config.h.in

// -------------------- machine word characteristics

// these are 0 or 1, never empty.
#define VXL_LITTLE_ENDIAN @VXL_LITTLE_ENDIAN@
#define VXL_BIG_ENDIAN    @VXL_BIG_ENDIAN@

// typedefs won't work here, because on systems where there are
// no 64bit integers we have to #define vxl_int_64 to `void' in
// order to catch illegitimate uses.
#define vxl_int_8  @VXL_INT_8@
#define vxl_int_16 @VXL_INT_16@
#define vxl_int_32 @VXL_INT_32@
#define vxl_int_64 @VXL_INT_64@

// signed versions.
#define vxl_sint_8  signed @VXL_INT_8@
#define vxl_sint_16 signed @VXL_INT_16@
#define vxl_sint_32 signed @VXL_INT_32@
#define vxl_sint_64 signed @VXL_INT_64@

// unsigned versions.
#define vxl_uint_8  unsigned @VXL_INT_8@
#define vxl_uint_16 unsigned @VXL_INT_16@
#define vxl_uint_32 unsigned @VXL_INT_32@
#define vxl_uint_64 unsigned @VXL_INT_64@

// IEEE floating point types.
#define vxl_ieee_32  @VXL_IEEE_32@
#define vxl_ieee_64  @VXL_IEEE_64@
//#define vxl_ieee_96  @VXL_IEEE_96@
//#define vxl_ieee_128 @VXL_IEEE_128@

// -------------------- library quirks

// these should be 1 if the symbol in question is declared
// in the relevant header file and 0 otherwise.

#define VXL_UNISTD_HAS_USECONDS_T @VXL_UNISTD_HAS_USECONDS_T@
#define VXL_UNISTD_HAS_INTPTR_T   @VXL_UNISTD_HAS_INTPTR_T@
#define VXL_UNISTD_HAS_UALARM     @VXL_UNISTD_HAS_UALARM@
#define VXL_UNISTD_HAS_USLEEP     @VXL_UNISTD_HAS_USLEEP@
#define VXL_UNISTD_HAS_LCHOWN     @VXL_UNISTD_HAS_LCHOWN@
#define VXL_UNISTD_HAS_PREAD      @VXL_UNISTD_HAS_PREAD@
#define VXL_UNISTD_HAS_PWRITE     @VXL_UNISTD_HAS_PWRITE@
#define VXL_UNISTD_HAS_TELL       @VXL_UNISTD_HAS_TELL@

// true if <stdlib.h> declares qsort()
#define VXL_STDLIB_HAS_QSORT      @VXL_STDLIB_HAS_QSORT@

// true if <stdlib.h> declares lrand48()
#define VXL_STDLIB_HAS_LRAND48    @VXL_STDLIB_HAS_LRAND48@

// true if <stdlib.h> declares drand48()
#define VXL_STDLIB_HAS_DRAND48    @VXL_STDLIB_HAS_DRAND48@

// true if <ieeefp.h> declares finite()
#define VXL_IEEEFP_HAS_FINITE     @VXL_IEEEFP_HAS_FINITE@

// true if <math.h> declares finite()
#define VXL_MATH_HAS_FINITE       @VXL_MATH_HAS_FINITE@

// true if usleep() returns void
#define VXL_UNISTD_USLEEP_IS_VOID @VXL_UNISTD_USLEEP_IS_VOID@

// true if gettime() takes two arguments
#define VXL_TWO_ARG_GETTIME       @VXL_TWO_ARG_GETTIME@

// true if <ieeefp.h> is available
#define VXL_HAS_IEEEFP_H          @VXL_HAS_IEEEFP_H@

#if 0
// -------------------- availability of 3rd party packages

// these should be 0 or 1, never empty.
#define VXL_HAS_JPEG   @HAS_JPEG@
#define VXL_HAS_TIFF   @HAS_TIFF@
#define VXL_HAS_PNG    @HAS_PNG@
#define VXL_HAS_ZLIB   @HAS_ZLIB@
#define VXL_HAS_HERMES @HAS_HERMES@
#define VXL_HAS_OPENGL @HAS_OPENGL@
#define VXL_HAS_GLUT   @HAS_GLUT@
#define VXL_HAS_FLTK   @HAS_FLTK@
#define VXL_HAS_GTK    @HAS_GTK@
#define VXL_HAS_SDL    @HAS_SDL@
#endif

#endif // vxl_config_h_
